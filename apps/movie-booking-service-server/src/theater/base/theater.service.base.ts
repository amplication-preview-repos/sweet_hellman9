/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Theater as PrismaTheater } from "@prisma/client";

export class TheaterServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TheaterCountArgs, "select">): Promise<number> {
    return this.prisma.theater.count(args);
  }

  async theaters(args: Prisma.TheaterFindManyArgs): Promise<PrismaTheater[]> {
    return this.prisma.theater.findMany(args);
  }
  async theater(
    args: Prisma.TheaterFindUniqueArgs
  ): Promise<PrismaTheater | null> {
    return this.prisma.theater.findUnique(args);
  }
  async createTheater(args: Prisma.TheaterCreateArgs): Promise<PrismaTheater> {
    return this.prisma.theater.create(args);
  }
  async updateTheater(args: Prisma.TheaterUpdateArgs): Promise<PrismaTheater> {
    return this.prisma.theater.update(args);
  }
  async deleteTheater(args: Prisma.TheaterDeleteArgs): Promise<PrismaTheater> {
    return this.prisma.theater.delete(args);
  }
}
