/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Showtime as PrismaShowtime } from "@prisma/client";
import { ShowtimeCreateInput } from "./ShowtimeCreateInput";
import { Showtime } from "./Showtime";

export class ShowtimeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ShowtimeCountArgs, "select">): Promise<number> {
    return this.prisma.showtime.count(args);
  }

  async showtimes(
    args: Prisma.ShowtimeFindManyArgs
  ): Promise<PrismaShowtime[]> {
    return this.prisma.showtime.findMany(args);
  }
  async showtime(
    args: Prisma.ShowtimeFindUniqueArgs
  ): Promise<PrismaShowtime | null> {
    return this.prisma.showtime.findUnique(args);
  }
  async createShowtime(
    args: Prisma.ShowtimeCreateArgs
  ): Promise<PrismaShowtime> {
    return this.prisma.showtime.create(args);
  }
  async updateShowtime(
    args: Prisma.ShowtimeUpdateArgs
  ): Promise<PrismaShowtime> {
    return this.prisma.showtime.update(args);
  }
  async deleteShowtime(
    args: Prisma.ShowtimeDeleteArgs
  ): Promise<PrismaShowtime> {
    return this.prisma.showtime.delete(args);
  }
  async CreateShowtime(args: ShowtimeCreateInput): Promise<Showtime> {
    throw new Error("Not implemented");
  }
  async DeleteShowtime(args: string): Promise<string> {
    throw new Error("Not implemented");
  }
  async UpdateShowtime(args: UpdateShowtimeArgs): Promise<Showtime> {
    throw new Error("Not implemented");
  }
}
